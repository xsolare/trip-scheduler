# =================================================================
# Этап 1: "builder" - Установка зависимостей и сборка проекта
# =================================================================
# Используем полную версию Bun, содержащую все необходимые инструменты для сборки
FROM oven/bun:1 as builder

# Устанавливаем рабочую директорию внутри контейнера
WORKDIR /usr/src/app

# Копируем только файлы, необходимые для установки зависимостей
# Это позволяет Docker кэшировать этот слой и не переустанавливать зависимости при каждом изменении кода
COPY package.json bun.lockb ./

# Устанавливаем ВСЕ зависимости, включая devDependencies, так как они нужны для сборки
RUN bun install --frozen-lockfile

# Копируем остальной исходный код и конфигурационные файлы
COPY . .

# Собираем production-версию приложения
# Команда "build" взята из вашего package.json
RUN bun run build

# =================================================================
# Этап 2: "release" - Создание финального образа для production
# =================================================================
# Используем slim-версию образа, которая содержит только рантайм Bun
FROM oven/bun:1-slim as release

# Устанавливаем рабочую директорию
WORKDIR /usr/src/app

# Устанавливаем переменные окружения для production
ENV NODE_ENV=production
ENV PORT=8080

# Копируем package.json и bun.lockb для установки только production-зависимостей
COPY package.json bun.lockb ./

# Устанавливаем только production-зависимости, чтобы уменьшить размер образа
RUN bun install --production --frozen-lockfile

# Копируем собранное приложение из этапа "builder"
COPY --from=builder /usr/src/app/dist ./dist

# Открываем порт, на котором будет работать приложение
EXPOSE 8080

# Устанавливаем команду для запуска приложения
# Используется скрипт "start" из package.json, который выполняет "bun --bun run dist/index.js"
CMD ["bun", "run", "start"]
