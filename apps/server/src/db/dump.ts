/* eslint-disable no-console */
import fs from 'node:fs/promises'
import path from 'node:path'
import process from 'node:process'
import { db } from './index'

async function createDump() {
  console.log('üé¨ –ù–∞—á–∞–ª–æ —Å–æ–∑–¥–∞–Ω–∏—è –¥–∞–º–ø–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...')

  try {
    // 1. –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ —Å –ø–æ–º–æ—â—å—é —Ä–µ–ª—è—Ü–∏–æ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ Drizzle
    // Drizzle ORM —Å–æ–±–µ—Ä–µ—Ç –¥–ª—è –Ω–∞—Å –≤–ª–æ–∂–µ–Ω–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É, –∫–∞–∫ –≤ mock-—Ñ–∞–π–ª–µ.
    const allTrips = await db.query.trips.findMany({
      with: {
        days: {
          orderBy: (days, { asc }) => [asc(days.date)],
          with: {
            activities: {
              orderBy: (activities, { asc }) => [asc(activities.startTime)],
            },
          },
        },
        images: {
          orderBy: (images, { desc }) => [desc(images.createdAt)],
        },
      },
      orderBy: (trips, { desc }) => [desc(trips.createdAt)],
    })

    console.log(`üîç –ù–∞–π–¥–µ–Ω–æ ${allTrips.length} –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π –¥–ª—è –¥–∞–º–ø–∞.`)

    // 2. –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ, —á—Ç–æ–±—ã –æ–Ω–∏ –±—ã–ª–∏ —Å–æ–≤–º–µ—Å—Ç–∏–º—ã —Å JSON.stringify
    // Drizzle –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç—ã Date, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ —Å—Ç—Ä–æ–∫–∏.
    const serializableData = allTrips.map(trip => ({
      ...trip,
      startDate: trip.startDate,
      endDate: trip.endDate,
      days: trip.days.map(day => ({
        ...day,
        date: day.date,
        activities: day.activities.map(activity => ({
          ...activity,
        })),
      })),
    }))

    // 3. –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –¥–∞–º–ø–∞, –µ—Å–ª–∏ –µ–µ –Ω–µ—Ç
    const dumpDir = path.join(__dirname, 'dump')
    await fs.mkdir(dumpDir, { recursive: true })
    const dumpFile = path.join(dumpDir, 'latest.dump.json')

    // 4. –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ JSON —Ñ–∞–π–ª
    await fs.writeFile(dumpFile, JSON.stringify(serializableData, null, 2))

    console.log(`‚úÖ –î–∞–º–ø —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: ${dumpFile}`)
  }
  catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–∞–º–ø–∞:', error)
    process.exit(1)
  }
  finally {
    console.log('üëã –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã.')
    process.exit(0)
  }
}

createDump()
